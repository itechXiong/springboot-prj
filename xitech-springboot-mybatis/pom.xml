<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.xitech.app</groupId>
  <artifactId>xitech-springboot-mybatis</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>xitech-springboot-mybatis Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <!-- Inherit defaults from Spring Boot -->
  <!-- 使用 spring-boot-starter-parent可以引入很多默认的maven配置-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
	</parent>
	<properties>
		<curator.version>4.2.0</curator.version>
		<RELEASE.VERSION>2.0.2</RELEASE.VERSION>
	</properties>
  <dependencies>
  	<!-- 使用spring-boot的方式一： -->
	<!-- Add typical dependencies for a web application -->
	<!-- web工程相关的依赖 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>
	<!-- caffeine缓存依赖 -->
	<dependency>
         <groupId>com.github.ben-manes.caffeine</groupId>
         <artifactId>caffeine</artifactId>
     </dependency>
     
     <!-- Ehcache 依赖 -->
	<dependency>
	    <groupId>net.sf.ehcache</groupId>
	    <artifactId>ehcache</artifactId>
	</dependency>
	<!-- 使用spring-boot的方式二  （该方式不会使用<parent></parent> 和不会引入 spring-boot-starter-web -->
	<!-- Import dependency management from Spring Boot -->
	<!-- <dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-dependencies</artifactId>
		<version>2.1.4.RELEASE</version>
		<type>pom</type>
		<scope>import</scope>
	</dependency> -->
	
	<!-- cache相关的依赖 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-cache</artifactId>
	</dependency>
	<!-- 添加Mybatis依赖 -->
	<!-- <dependency>
	    <groupId>org.mybatis.spring.boot</groupId>
	    <artifactId>mybatis-spring-boot-starter</artifactId>
	    <version>2.0.1</version>
	</dependency> -->
	<!-- mysql依赖 -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
	</dependency>
	<!-- AOP依赖 -->
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
	</dependency>
	
	<!-- 注册中心Eureka 依赖 -->
  	<dependency>
	  <groupId>org.springframework.cloud</groupId>
	  <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
	</dependency>
	<!-- <dependency>
	   <groupId>org.springframework.cloud</groupId>
	   <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
	</dependency> -->
	<!-- <dependency>
	  <groupId>de.codecentric</groupId>
	  <artifactId>spring-boot-admin-starter-client</artifactId>
	  <version>2.1.4</version>
	</dependency> -->
	
	<!-- rocket MQ -->
	<dependency>
	  <groupId>org.apache.rocketmq</groupId>
	  <artifactId>rocketmq-client</artifactId>
	  <version>4.5.0</version>
	</dependency>
	
	<!-- <dependency>
	    <groupId>org.apache.rocketmq</groupId>
	    <artifactId>rocketmq-spring-boot-starter</artifactId>
	    <version>${RELEASE.VERSION}</version>
	</dependency> -->
	
	<!-- zookeeper的客户端curator依赖 -->
	<dependency>
	     <groupId>org.apache.curator</groupId>
	     <artifactId>curator-framework</artifactId>
	     <version>${curator.version}</version>
	</dependency>
	<dependency>
	     <groupId>org.apache.curator</groupId>
	     <artifactId>curator-recipes</artifactId>
	     <version>${curator.version}</version>
	</dependency>
	<!-- <version>${curator.version}</version> -->
	<!-- zookeeper依赖（spring cloud方式的依赖） -->
	<!-- <dependency>
	    <groupId>org.springframework.cloud</groupId>
	    <artifactId>spring-cloud-starter-zookeeper-all</artifactId>
	    <exclusions>
	        <exclusion>
	            <groupId>org.apache.zookeeper</groupId>
	            <artifactId>zookeeper</artifactId>
	        </exclusion>
	    </exclusions>
	</dependency>
	<dependency>
	    <groupId>org.apache.zookeeper</groupId>
	    <artifactId>zookeeper</artifactId>
	    <version>3.4.12</version>
	    <exclusions>
	        <exclusion>
	            <groupId>org.slf4j</groupId>
	            <artifactId>slf4j-log4j12</artifactId>
	        </exclusion>
	    </exclusions>
	</dependency> -->
	
	<!-- 自主开发的jar包依赖 -->
	<dependency>
      <groupId>com.xitech.app</groupId>
      <artifactId>xitech-common-framework</artifactId>
      <version>0.0.1-beta</version>
    </dependency>
	
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <dependencyManagement>
  	<dependencies>
  		<dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-dependencies</artifactId>
          <version>Greenwich.RELEASE</version>
          <type>pom</type>
          <scope>import</scope>
      </dependency>
      
  	</dependencies>
  </dependencyManagement>
  
  <build>
    <finalName>xitech-springboot-mybatis</finalName>
     <plugins>  
         <plugin>  
             <groupId>org.apache.maven.plugins</groupId>  
             <artifactId>maven-compiler-plugin</artifactId>  
             <version>3.1</version>  
             <configuration>  
                 <source>1.8</source>  
                 <target>1.8</target>  
             </configuration>  
         </plugin>
         <plugin>
         	<groupId>org.springframework.boot</groupId>
         	<artifactId>spring-boot-maven-plugin</artifactId>
         </plugin>  
     </plugins>  
  </build>
</project>
